# Copyright 2014 Red Hat, Inc. and/or its affiliates.
#
# Licensed to you under the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  See the files README and
# LICENSE_GPL_v2 which accompany this distribution.

# This is configuration for YouCompleteMe
# https://valloric.github.io/YouCompleteMe/

import os
flags = ['-DUSE_CLANG_COMPLETER',
         '-std=c99',
         '-DHAVE_CONFIG_H',
         '-I.',
         '-I..',
         '-x',
         'c']

flags.extend('@GLIB2_CFLAGS@'.split())
flags.extend('@GTHREAD2_CFLAGS@'.split())
flags.extend('@YAJL_CFLAGS@'.split())
flags.extend('@IOPROCESS_CFLAGS@'.split())
flags.extend('@CFLAGS@'.split())

SOURCE_EXTENSIONS = ['.cpp', '.cxx', '.cc', '.c', '.m', '.mm']


def DirectoryOfThisScript():
    return os.path.dirname(os.path.abspath(__file__))


def MakeRelativePathsInFlagsAbsolute(flags, working_directory):
    if not working_directory:
        return list(flags)
    new_flags = []
    make_next_absolute = False
    path_flags = ['-isystem', '-I', '-iquote', '--sysroot=']
    for flag in flags:
        new_flag = flag

        if make_next_absolute:
            make_next_absolute = False
            if not flag.startswith('/'):
                new_flag = os.path.join(working_directory, flag)

        for path_flag in path_flags:
            if flag == path_flag:
                make_next_absolute = True
                break

            if flag.startswith(path_flag):
                path = flag[len(path_flag):]
                new_flag = path_flag + os.path.join(working_directory, path)
                break

        if new_flag:
            new_flags.append(new_flag)

    return new_flags


def FlagsForFile(filename, **kwargs):
    relative_to = DirectoryOfThisScript()
    final_flags = MakeRelativePathsInFlagsAbsolute(flags, relative_to)

    return {'flags': final_flags,
            'do_cache': False}
